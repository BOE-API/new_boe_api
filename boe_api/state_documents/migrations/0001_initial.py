# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-05-08 14:43
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('state', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alerta',
            fields=[
                ('codigo', models.IntegerField(primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=4000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('codigo', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=4000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Diario',
            fields=[
                ('codigo', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=400, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identificador', models.CharField(db_index=True, help_text='Identificador oficial del documento', max_length=25, unique=True)),
                ('titulo', models.CharField(db_index=True, default='', help_text='Titulo del documento', max_length=5000, null=True)),
                ('diario_numero', models.IntegerField(help_text='Corresponde al n\xfamero del diario en el que se public\xf3 la norma. Es un n\xfamero correlativo que comienza cada a\xf1o.', null=True)),
                ('seccion', models.CharField(default='', help_text='Secci\xf3n', max_length=50, null=True)),
                ('subseccion', models.CharField(default='', help_text='Subsecci\xf3n', max_length=50, null=True)),
                ('numero_oficial', models.CharField(default='', help_text='Es el n\xfamero de la norma, tiene estructura de n\xfamero/a\xf1o. Ejemplo: 169/2008', max_length=50, null=True)),
                ('fecha_disposicion', models.DateField(help_text='Es la fecha en la que se aprueba la norma.', null=True)),
                ('fecha_publicacion', models.DateField(db_index=True, help_text='Es la fecha del BOE o DOUE en la que se public\xf3 la norma.', null=True)),
                ('fecha_vigencia', models.DateField(help_text='Fecha en la que entra en vigor la norma', null=True)),
                ('fecha_derogacion', models.DateField(help_text='Fecha en la que la norma de deroga', null=True)),
                ('letra_imagen', models.CharField(default='', help_text='-', max_length=10, null=True)),
                ('pagina_inicial', models.IntegerField(help_text='Pagina inicial', null=True)),
                ('pagina_final', models.IntegerField(help_text='Pagina final', null=True)),
                ('suplemento_letra_imagen', models.CharField(default='', help_text='-', max_length=10, null=True)),
                ('suplemento_pagina_inicial', models.CharField(default='', help_text='-', max_length=10, null=True)),
                ('suplemento_pagina_final', models.CharField(default='', help_text='-', max_length=10, null=True)),
                ('estatus_legislativo', models.CharField(default='', help_text='-', max_length=10, null=True)),
                ('judicialmente_anulada', models.NullBooleanField(help_text='Anulada judicialmente')),
                ('vigencia_agotada', models.NullBooleanField(help_text='Con vigencia agotada')),
                ('url_epub', models.URLField(help_text='URL EPUB', null=True)),
                ('url_xml', models.URLField(db_index=True, help_text='URL XML', null=True)),
                ('url_htm', models.URLField(help_text='URL HTML', null=True)),
                ('url_pdf', models.URLField(help_text='URL PDF', null=True)),
                ('url_pdf_catalan', models.URLField(help_text='URL PDF Catalan (No todos los documentos los tienen)', null=True)),
                ('url_pdf_euskera', models.URLField(help_text='URL PDF Euskera (No todos los documentos los tienen)', null=True)),
                ('url_pdf_gallego', models.URLField(help_text='URL PDF Gallego (No todos los documentos los tienen)', null=True)),
                ('url_pdf_valenciano', models.URLField(help_text='URL PDF Valenciano (No todos los documentos los tienen)', null=True)),
                ('texto', models.TextField(default='', help_text='Texto del documento en HTML', null=True)),
                ('alertas', models.ManyToManyField(help_text='Alertas disponibles para el documento', to='state_documents.Alerta')),
                ('departamento', models.ForeignKey(help_text='Organismo que emite la resoluci\xf3n.', null=True, on_delete=django.db.models.deletion.CASCADE, to='state_documents.Departamento')),
                ('diario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='state_documents.Diario')),
            ],
            options={
                'ordering': ['-fecha_publicacion'],
            },
        ),
        migrations.CreateModel(
            name='Estado_consolidacion',
            fields=[
                ('codigo', models.IntegerField(primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=4000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Materia',
            fields=[
                ('codigo', models.IntegerField(primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=4000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Nota',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.IntegerField()),
                ('titulo', models.CharField(max_length=4000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Origen_legislativo',
            fields=[
                ('codigo', models.IntegerField(primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=4000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Palabra',
            fields=[
                ('codigo', models.IntegerField(primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=4000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rango',
            fields=[
                ('codigo', models.IntegerField(primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=4000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Referencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.TextField(max_length=4000)),
                ('palabra', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='state_documents.Palabra')),
                ('referencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='state_documents.Documento')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='nota',
            unique_together=set([('codigo', 'titulo')]),
        ),
        migrations.AddField(
            model_name='documento',
            name='estado_consolidacion',
            field=models.ForeignKey(help_text='Desactualizado, Finalizado o En proceso', null=True, on_delete=django.db.models.deletion.CASCADE, to='state_documents.Estado_consolidacion'),
        ),
        migrations.AddField(
            model_name='documento',
            name='legislatura',
            field=models.ForeignKey(help_text='Legislatura en la que se aprob\xf3 la norma', null=True, on_delete=django.db.models.deletion.CASCADE, to='state.Legislatura'),
        ),
        migrations.AddField(
            model_name='documento',
            name='materias',
            field=models.ManyToManyField(help_text='Materias del documento', to='state_documents.Materia'),
        ),
        migrations.AddField(
            model_name='documento',
            name='notas',
            field=models.ManyToManyField(help_text='Notas del documento', to='state_documents.Nota'),
        ),
        migrations.AddField(
            model_name='documento',
            name='origen_legislativo',
            field=models.ForeignKey(help_text='Autonomico, Estatal o Europeo', null=True, on_delete=django.db.models.deletion.CASCADE, to='state_documents.Origen_legislativo'),
        ),
        migrations.AddField(
            model_name='documento',
            name='rango',
            field=models.ForeignKey(help_text='Categor\xeda normativa de la disposici\xf3n: Ley, Real Decreto, Orden, Directiva, etc\xe9tera.', null=True, on_delete=django.db.models.deletion.CASCADE, to='state_documents.Rango'),
        ),
        migrations.AddField(
            model_name='documento',
            name='referencias_anteriores',
            field=models.ManyToManyField(help_text='Referencias anteriores', related_name='ref_anteriores', to='state_documents.Referencia'),
        ),
        migrations.AddField(
            model_name='documento',
            name='referencias_posteriores',
            field=models.ManyToManyField(help_text='Referencias posteriores', related_name='ref_posteriores', to='state_documents.Referencia'),
        ),
        migrations.AlterUniqueTogether(
            name='referencia',
            unique_together=set([('referencia', 'palabra')]),
        ),
    ]
